@page "/login"
@using AspireAppEmp.Web.Authentication
@using Microsoft.AspNetCore.Components.Authorization
@layout AspireAppEmp.Web.Components.Layout.EmptyLayout
@inject HttpClient Http
@inject NavigationManager Navigation
@inject AuthenticationStateProvider authStateProvider
@attribute [Microsoft.AspNetCore.Authorization.AllowAnonymous]


<div class="p-2">
    <EditForm Model="loginModel" FormName="Login" OnValidSubmit="HandleLogin">
        <div class="row form-group">
            <label class="col-sm-2 form-label">Username:</label>
            <InputText @bind-Value="loginModel.Username" class="form-control" />
        </div>
        <div class="row form-group">
            <label class="col-sm-2 form-label">Password:</label>
            <InputText @bind-Value="loginModel.Password" type="password" class="form-control" />
        </div>

        <button type="submit" class="btn btn-outline-primary">Login</button>

    </EditForm>
</div>

@code {
    private LoginModel loginModel = new LoginModel();
    private bool isLoading = false;
    private string errorMessage = "";

    private async Task HandleLogin()
    {
        isLoading = true;
        errorMessage = "";
        try
        {
            var response = await Http.PostAsJsonAsync("https://localhost:7102/login", loginModel);
            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<LoginResponse>();
                if (result != null)
                {
                    if (authStateProvider is CustomAuthenticationStateProvider customAuthProvider)
                    {
                      await  customAuthProvider.MarkUserAuthenication(result.Token);
                    }

                    // Redirect to the home page
                    Navigation.NavigateTo("/");
                }
            }
            else
            {
                errorMessage = "Invalid username or password.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    // Login model for the form
    public class LoginModel
    {

        public string Username { get; set; }


        public string Password { get; set; }
    }

    // Expected login response model
    public class LoginResponse
    {
        public string Token { get; set; }
    }
}